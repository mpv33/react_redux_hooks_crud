{"version":3,"sources":["store/contact/selector.ts","components/AddContact.tsx","components/Home.tsx","components/ContactHome.tsx","components/Navbar.tsx","GuardeRoute.tsx","UnProtected.tsx","App.tsx","store/contact/contact.Reducer.ts","store/store.ts","index.tsx"],"names":["getContactListState","state","AddPost","useState","name","setName","email","setEmail","phone","setPhone","id","setId","date","setDate","gender","setGender","city","setCity","TnC","setTnC","contacts","useSelector","history","useHistory","path","location","pathname","id_obj","useParams","console","log","currentContact","find","contact","parseInt","useEffect","dispatch","useDispatch","className","onSubmit","e","preventDefault","checkContactEmailExists","filter","checkContactPhoneExists","toast","warning","length","error","add_data","type","payload","success","push","data","updateContact","placeholder","value","onChange","target","checked","onClick","Home","props","isAutheticated","s","setisAutheticated","set","to","ContactHome","scope","map","deleteContact","Navbar","GuardedRoute","Component","component","auth","rest","render","UnProtected","App","exact","GuardeRoute","initialState","store","createStore","action","contactFilter","contactUpdate","Object","assign","composeWithDevTools","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e7672c48.chunk.js","sourcesContent":["//import { SystemState } from \"../storeTypes\";\r\n\r\n\r\nexport const getContactListState = (state:any) => {\r\n    return state \r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport {getContactListState} from '../store/contact/selector'\r\n\r\nconst AddPost = () => {\r\n    //const { contacts, addContact } = props\r\n    // let DatePicker = require(\"react-bootstrap-date-picker\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n    const [date, setDate] = useState('');\r\n    const [gender, setGender] = useState('male');\r\n    const [city, setCity] = useState('');\r\n    const [TnC, setTnC] = useState(false);\r\n    const contacts = useSelector(getContactListState)\r\n    const history = useHistory();\r\n    const path = history.location.pathname\r\n    const id_obj: any = useParams();\r\n    console.log(id)\r\n    const currentContact = contacts.find(\r\n        (contact: any) => contact.id === parseInt(id_obj.id)\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n        if (path !== '/contact/add') {\r\n            setName(currentContact.name);\r\n            setEmail(currentContact.email);\r\n            setPhone(currentContact.phone);\r\n            setDate(currentContact.date)\r\n            setGender(currentContact.gender)\r\n            setCity(currentContact.city)\r\n            setId(id_obj.id)\r\n        }\r\n\r\n    }, [currentContact, id_obj.id, path]);\r\n\r\n    const dispatch = useDispatch()\r\n    const addContact = (data: any) => {\r\n        dispatch({ type: \"ADD_CONTACT\", payload: data });\r\n    }\r\n    const updateContact = (data: any) => {\r\n        dispatch({ type: \"UPDATE_CONTACT\", payload: data });\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const checkContactEmailExists = contacts.filter((contact: any) =>\r\n            contact.email === email && contact.id !== currentContact.id\r\n                ? contact\r\n                : null\r\n        );\r\n        const checkContactPhoneExists = contacts.filter((contact: any) =>\r\n            contact.phone === phone && contact.id !== currentContact.id\r\n                ? contact\r\n                : null\r\n        );\r\n\r\n        if (!email || !name || !phone || !date || !TnC || !city || !gender) {\r\n           \r\n            return toast.warning(\"Please fill in all fields!!\");\r\n        }\r\n        if (checkContactEmailExists.length > 0) {\r\n            return toast.error(\"This email already exists!!\");\r\n        }\r\n        if (checkContactPhoneExists.length > 0) {\r\n            return toast.error(\"This phone number already exists!!\");\r\n        }\r\n\r\n\r\n\r\n        if (path === '/contact/add') {\r\n            const add_data = {\r\n                id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\r\n                email,\r\n                name,\r\n                phone,\r\n                date,\r\n                city,\r\n                gender,\r\n                TnC\r\n\r\n            };\r\n            addContact(add_data);\r\n            toast.success(\"Contact added successfully!!\");\r\n            history.push(\"/contact\");\r\n        } else {\r\n            const update_data = {\r\n                id: currentContact.id,\r\n                email,\r\n                name,\r\n                phone,\r\n                date,\r\n                gender,\r\n                city\r\n            };\r\n            updateContact(update_data);\r\n            toast.success(\"Contact updated successfully!!\");\r\n            history.push(\"/contact\");\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h6 className=\"text-center text-dark py-1 display-2\">{path === '/contact/add' ? 'Add Post' : 'Update Post'}</h6>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 p-5 mx-auto shadow\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Full name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"number\"\r\n                                placeholder=\"Phone\"\r\n                                value={phone}\r\n                                onChange={(e) => setPhone(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                placeholder=\"Dob\"\r\n                                value={date}\r\n                                onChange={(e) => setDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-control\">\r\n                                <span> Select Gender : </span>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n\r\n                                        value='male'\r\n                                        checked={gender === 'male'}\r\n                                        onChange={(e) => setGender(e.target.value)}\r\n                                    />\r\n                                    Male\r\n                                </label>\r\n\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        placeholder=\"select gender\"\r\n                                        value='female'\r\n                                        checked={gender === 'female'}\r\n                                        onChange={(e) => setGender(e.target.value)}\r\n                                    />\r\n                                    female\r\n                                </label>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-control\">\r\n                                <input\r\n                                    className=\"\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Select City Name\"\r\n                                    value={city}\r\n                                    onChange={(e) => setCity(e.target.value)}\r\n                                />\r\n\r\n\r\n                                <select\r\n                                    className=\"\"\r\n                                    onChange={(e) => setCity(e.target.value)}>\r\n                                    <option> delhi</option>\r\n                                    <option> lucknow</option>\r\n                                    <option> mumbai</option>\r\n                                    <option> Goa</option>\r\n                                    <option> Hyderabad</option>\r\n\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-control\"> \r\n                            <input\r\n                                type=\"checkbox\"\r\n\r\n                                checked={TnC}\r\n                                onChange={(e) => setTnC(e.target.checked)}\r\n                            />\r\n                            <span> Do you agree with above all data is right </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                {path === '/contact/add' ? 'Add Contact' : 'Update Contact'}\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => history.push(\"/contact\")}\r\n                            >\r\n                                cancel\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = (state:any) => ({\r\n//   contacts: state,\r\n// });\r\n// const mapDispatchToProps = (dispatch:any) => ({\r\n//   addContact: (data:any) => {\r\n//     dispatch({type: \"ADD_CONTACT\", payload: data });\r\n//   },\r\n// });\r\n\r\nexport default AddPost;","import React, { useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nfunction Home(props: any) {\r\n\r\n\r\n  const isAutheticated = props.s\r\n  const setisAutheticated = props.set\r\n\r\n  function login() {\r\n    setisAutheticated(true);\r\n    toast.success(\"User LogIn successfully!!\");\r\n    console.log(\"loggedInUser:\" + !isAutheticated)\r\n  }\r\n\r\n  function logout() {\r\n    setisAutheticated(false);\r\n    toast.success(\"User LogOut successfully!!\");\r\n    console.log(\"loggedInUser:\" + !isAutheticated)\r\n  }\r\n  return (\r\n    <div>\r\n      <h3> Hey Welcome in Contact Crud App  </h3>\r\n      <Link to=\"/contact\" className=\"col-md-2 btn btn-outline-dark my-1 ml-auto\">\r\n        Lets Move on  Contact Page\r\n      </Link> <br />\r\n      <Link to=\"/unauth\" className=\"col-md-2 btn btn-outline-dark my-1 ml-auto\">\r\n        Lets Move on  unauth Page\r\n      </Link>  <br />\r\n      <button onClick={login}>Login</button>\r\n      \r\n      <button onClick={logout}>Logout</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { connect ,useDispatch,useSelector} from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {getContactListState} from '../store/contact/selector'\r\nconst ContactHome = () => {\r\n   // const { contacts, deleteContact } = props\r\n // const contacts =useSelector((state:any) => state)\r\n\r\n  const contacts =useSelector(getContactListState)\r\n   const dispatch = useDispatch()\r\n    const  deleteContact =(id:any) => {\r\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n        toast.success(\"Contact deleted successfully!!\");\r\n      }\r\n  return (\r\n    <div className=\"container\">\r\n        <Link to=\"/contact/add\" className=\"col-md-2 btn btn-outline-dark my-5 ml-auto\">\r\n          Add Contact\r\n        </Link>\r\n      <div className=\"row d-flex flex-column\">\r\n        <div className=\"col-md-10 mx-auto my-4\">\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"table-header bg-dark text-white\">\r\n              <tr>\r\n                <th scope=\"col\">Id</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\">Dob</th>\r\n                <th scope=\"col\">Gender</th>\r\n                <th scope=\"col\">City</th>\r\n                <th scope=\"col\">Action</th>\r\n               \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contacts.length > 0 ? (\r\n                contacts.map((contact:any, id:any) => (\r\n                  <tr key={id}>\r\n                    <td>{id + 1}</td>\r\n                    <td>{contact.name}</td>\r\n                    <td>{contact.email}</td>\r\n                    <td>{contact.phone}</td>\r\n                    <td>{contact.date}</td>\r\n                    <td>{contact.gender}</td>\r\n                    <td>{contact.city}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={`/contact/edit/${contact.id}`}\r\n                        className=\"btn btn-sm btn-primary\"\r\n                      >\r\n                        Edit\r\n                      </Link>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => deleteContact(contact.id)}\r\n                        className=\"btn btn-sm btn-danger ml-1\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <th>No contacts found</th>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state:any) => ({\r\n//   contacts: state,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch:any) => ({\r\n//   deleteContact: (id:any) => {\r\n//     dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n//     toast.success(\"Contact deleted successfully!!\");\r\n//   },\r\n// });\r\n\r\nexport default ContactHome;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"col-md-12 bg-dark py-2\">\r\n      <nav className=\"navbar bg-dark navbar-dark\">\r\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\r\n          React Redux Contact Book\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nconst GuardedRoute = (props:any) => {\r\n    const { component: Component, auth, ...rest } = props\r\n    const alert = ()=>{\r\n       return  toast.warning(\"Please LogIn First !!\");\r\n    }\r\nconsole.log(\"auth:\" + auth)\r\n    return(\r\n        <Route {...rest} render={(props) => (\r\n            auth === true\r\n                ? <Component {...props} />\r\n                : <>\r\n                 {alert()}\r\n                 <Redirect to='/' />\r\n                 </>\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default GuardedRoute;","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UnProtected() {\r\n    return (\r\n        <div>\r\n            <h1> Hey Iam Unauth user page    </h1>  <br></br>\r\n            <Link to=\"/\" className=\"col-md-2 btn btn-outline-dark my-5 ml-auto\">\r\n                Lets Move on Home Page\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnProtected\r\n","import React,{useState} from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddContact\";\nimport Home from \"./components/Home\";\nimport ContactHome from \"./components/ContactHome\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport GuardeRoute from './GuardeRoute';\nimport UnProtected from \"./UnProtected\";\n\nconst App = () => {\n  const [isAutheticated, setisAutheticated] = useState(false);\n  \n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      \n      <Route exact path=\"/\" component={() => <Home s={isAutheticated} set={setisAutheticated}/>} />\n      <Route exact path=\"/unauth\" component={() => <UnProtected />} />\n      <GuardeRoute exact path=\"/contact\"  auth={isAutheticated} component={() => <ContactHome />} />\n      <Route exact path=\"/contact/add\" component={() => <AddPost />} />\n      <Route exact path=\"/contact/edit/:id\" component={() => <AddPost />} />\n    </div>\n  );\n};\nexport default App;","const initialState = [\r\n    \r\n    { id: 0, name: \"Raman Sharma\", email: \"email@email.com\", phone: 1234567890,date:'2021-01-06',gender:'male',city:'delhi' },\r\n    { id: 1, name: \"Test Name\", email: \"test@test.com\", phone: 4567891230 ,date:'2021-01-06',gender:'male',city:'delhi' },\r\n  ];\r\n  \r\n  export const contactReducer = (state = initialState, action:any) => {\r\n    switch (action.type) {\r\n      case \"ADD_CONTACT\":\r\n        state = [...state, action.payload];\r\n        return state;\r\n      case \"DELETE_CONTACT\":\r\n        const contactFilter = state.filter((contact) =>\r\n          contact.id === action.payload ? null : contact\r\n        );\r\n        state = contactFilter;\r\n        return state;\r\n      case \"UPDATE_CONTACT\":\r\n        const contactUpdate = state.filter((contact) =>\r\n          contact.id === action.payload.id\r\n            ? Object.assign(contact, action.payload)\r\n            : contact\r\n        );\r\n        state = contactUpdate;\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  };","\r\nimport { createStore } from \"redux\";\r\n\r\nimport { contactReducer } from \"./contact/contact.Reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(contactReducer, composeWithDevTools());\r\n\r\nexport default store\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from './store/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}